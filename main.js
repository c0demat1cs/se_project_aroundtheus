!function(){"use strict";class e{constructor(e,t,n){let{name:s,link:i}=e;this._name=s,this._link=i,this._cardSelector=t,this._handleImageClick=n}_getElement(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return this._cardElement=this._getElement(),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._deleteButton=this._cardElement.querySelector(".card__delete-button"),this._cardImageEl=this._cardElement.querySelector(".card__image"),this._cardTitleEl=this._cardElement.querySelector(".card__title"),this._cardImageEl.src=this._link,this._cardImageEl.alt=this._name,this._cardTitleEl.textContent=this._name,this._setEventListeners(),this._cardElement}_handleLikeIcon=()=>{this._likeButton.classList.toggle("card__like-button_active")};_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeIcon()})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteCard()})),this._cardImageEl.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}_handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}}class t{constructor(e,t){this._formElement=t,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._inputElements=this._formElement.querySelectorAll(this._inputSelector),this._submitButton=this._formElement.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_hasInvalidInput(){return Array.from(this._inputElements).some((e=>!e.validity.valid))}_disableButton(){this._submitButton&&(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0)}_enableButton(){this._submitButton&&(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_toggleButtonState(){this._hasInvalidInput()?this._disableButton():this._enableButton()}_setEventListeners(){this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}resetValidation(){this._inputElements.forEach((e=>{this._checkInputValidity(e)})),this._toggleButtonState()}disableSubmitButton(){this._disableButton()}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class n{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._handleKeyDown=this._handleKeyDown.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleKeyDown)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleKeyDown)}_handleKeyDown(e){"Escape"===e.key&&this.close()}setEventListeners(){const e=this._popupElement.querySelector(".modal__close");e&&e.addEventListener("click",(()=>this.close())),this._popupElement.addEventListener("mousedown",(e=>{e.target.classList.contains("modal_opened")&&this.close()}))}}var s=class extends n{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputFields=this._popupForm.querySelectorAll(".modal__input"),this._formSubmitHandler=this._formSubmitHandler.bind(this)}_getInputValues(){const e={};return this._inputFields.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",this._formSubmitHandler)}_formSubmitHandler(e){e.preventDefault(),this._handleFormSubmit(this._getInputValues())}close(){this._popupForm.reset(),super.close()}};const i={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},o=(document.querySelector(".cards__list"),document.querySelector("#profile-edit-modal"),document.querySelector("#add-card-modal"),document.querySelector(".modal__image"),document.querySelector(".modal__popup-caption"),document.querySelector("#profile-add-button")),r=document.querySelector("#profile-edit-button"),l=(document.querySelector("#card-title-input"),document.querySelector("#card-link-input"),document.querySelector(".profile__title"),document.querySelector(".profile__description"),document.querySelector("#profile-title-input")),a=document.querySelector("#profile-description-input"),c=(document.forms["profile-form"],document.forms["card-form"],new t(i,document.querySelector("#profile-form")));c.enableValidation();const u=new t(i,document.querySelector("#add-card-form"));u.enableValidation();const d=new s("#add-card-modal",(e=>{var t,n;t=e.title,n=e.link,function(e){const t=E(e);h.addItem(t)}({name:t,link:n}),u.disableSubmitButton(),d.close()}));d.setEventListeners();const m=new s("#profile-edit-modal",(e=>{const t=e.title,n=e.description;p.setUserInfo(t,n),c.disableSubmitButton(),m.close()}));m.setEventListeners();const _=new class extends n{constructor(e){super({popupSelector:e}),this._popupCaption=this._popupElement.querySelector(".modal__popup-caption"),this._imageElement=this._popupElement.querySelector(".modal__image")}open(e){let{link:t,name:n}=e;this._popupCaption.textContent=n,this._imageElement.src=t,this._imageElement.alt=`Image of ${n}`,super.open()}}("#image-modal");_.setEventListeners();const p=new class{constructor(e,t){this._profileTitleElement=document.querySelector(e),this._profileDescriptionElement=document.querySelector(t)}getUserInfo(){return{title:this._profileTitleElement.textContent,description:this._profileDescriptionElement.textContent}}setUserInfo(e,t){this._profileTitleElement.textContent=e,this._profileDescriptionElement.textContent=t}}(".profile__title",".profile__description"),h=new class{constructor(e,t){let{items:n,renderer:s}=e;this._items=n,this._renderer=s,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{const t=this._renderer(e);this.addItem(t)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg "}],renderer:E},"#cards__list");function E(t){return new e(t,"#card-template",f).getView()}function f(e){let{name:t,link:n}=e;_.open({link:n,name:t})}h.renderItems(),r.addEventListener("click",(()=>{const e=p.getUserInfo();l.value=e.title,a.value=e.description,c.resetValidation(),m.open()})),o.addEventListener("click",(()=>{d.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,