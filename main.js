!function(){"use strict";class e{constructor(e,t,s,i,r,n){let{name:o,link:l,_id:a,isLiked:d}=e;this._name=o,this._link=l,this._id=a,this.isLiked=d,this._cardSelector=t,this._handleImageClick=s,this._handleDeleteCard=i,this._handleLikeClick=r,this._handleUnlikeClick=n}getId(){return this._id}getIsLiked(){return this._isLiked}_getElement(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return this._cardElement=this._getElement(),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._deleteButton=this._cardElement.querySelector(".card__delete-button"),this._cardImageEl=this._cardElement.querySelector(".card__image"),this._cardTitleEl=this._cardElement.querySelector(".card__title"),this._cardImageEl.src=this._link,this._cardImageEl.alt=this._name,this._cardTitleEl.textContent=this._name,this._setEventListeners(),this._setLikeState(),this._cardElement}_setLikeState(){!0===this.isLiked?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active")}handleLikeIcon=()=>{this._likeButton.classList.toggle("card__like-button_active")};_setEventListeners(){this._likeButton.addEventListener("click",(()=>{!0===this.isLiked?this._handleUnlikeClick(this):this._handleLikeClick(this)})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteCard(this)})),this._cardImageEl.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}deleteCard=()=>{this._cardElement.remove(),this._cardElement=null}}class t{constructor(e,t){this._formElement=t,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._inputElements=this._formElement.querySelectorAll(this._inputSelector),this._submitButton=this._formElement.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_hasInvalidInput(){return Array.from(this._inputElements).some((e=>!e.validity.valid))}_disableButton(){this._submitButton&&(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0)}_enableButton(){this._submitButton&&(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_toggleButtonState(){this._hasInvalidInput()?this._disableButton():this._enableButton()}_setEventListeners(){this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}resetValidation(){this._inputElements.forEach((e=>{this._checkInputValidity(e)})),this._toggleButtonState()}disableSubmitButton(){this._disableButton()}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class s{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._handleKeyDown=this._handleKeyDown.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleKeyDown)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleKeyDown)}_handleKeyDown(e){"Escape"===e.key&&this.close()}setEventListeners(){const e=this._popupElement.querySelector(".modal__close");e&&e.addEventListener("click",(()=>this.close())),this._popupElement.addEventListener("mousedown",(e=>{e.target.classList.contains("modal_opened")&&this.close()}))}}var i=class extends s{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputFields=this._popupForm.querySelectorAll(".modal__input"),this._formSubmitHandler=this._formSubmitHandler.bind(this),this._submitBtn=this._popupForm.querySelector(".modal__button"),this._submitBtnText=this._submitBtn.textContent}renderLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._submitBtn.textContent=e?t:this._submitBtnText}_getInputValues(){const e={};return this._inputFields.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",this._formSubmitHandler)}_formSubmitHandler(e){e.preventDefault(),this._handleFormSubmit(this._getInputValues())}close(){this._popupForm.reset(),super.close()}};const r={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},n=(document.querySelector(".cards__list"),document.querySelector("#profile-edit-modal"),document.querySelector("#add-card-modal"),document.querySelector(".modal__image"),document.querySelector(".modal__popup-caption"),document.querySelector("#profile-add-button")),o=document.querySelector("#profile-edit-button"),l=document.querySelector(".profile__edit-icon"),a=(document.querySelector("#card-title-input"),document.querySelector("#card-link-input"),document.querySelector(".profile__title"),document.querySelector(".profile__description"),document.querySelector("#profile-title-input")),d=document.querySelector("#profile-description-input");document.forms["profile-form"],document.forms["card-form"];const c=new t(r,document.querySelector("#profile-form"));c.enableValidation();const u=new t(r,document.querySelector("#add-card-form"));u.enableValidation();const h=new t(r,document.querySelector("#avatar-form"));h.enableValidation();const _=new i("#add-card-modal",(e=>{var t,s;t=e.title,s=e.link,_.renderLoading(!0),v.addNewCard({name:t,link:s}).then((e=>{!function(e){const t=k(e);S.addItem(t)}(e),u.disableSubmitButton(),_.close()})).catch((e=>{console.error(e)})).finally((()=>{_.renderLoading(!1)}))}));_.setEventListeners();const m=new i("#profile-edit-modal",(function(e){let{title:t,description:s}=e;m.renderLoading(!0),v.editProfileInfo({name:t,about:s}).then((e=>{f.setUserInfo(e.name,e.about),c.disableSubmitButton(),m.close()})).catch((e=>{console.error(e)})).finally((()=>{m.renderLoading(!1)}))}));m.setEventListeners();const p=new class extends s{constructor(e){super({popupSelector:e}),this._popupCaption=this._popupElement.querySelector(".modal__popup-caption"),this._imageElement=this._popupElement.querySelector(".modal__image")}open(e){let{link:t,name:s}=e;this._popupCaption.textContent=s,this._imageElement.src=t,this._imageElement.alt=`Image of ${s}`,super.open()}}("#image-modal");p.setEventListeners();const E=new class extends s{constructor(e){super({popupSelector:e})}setEventListeners(){super.setEventListeners(),this._popupElement.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmit()}))}setSubmitCallback(e){this._handleSubmit=e}}("#delete-card-modal",y);E.setEventListeners();const b=new i("#avatar-modal",(function(e){b.renderLoading(!0);const t=e.link;v.updateAvatar({avatar:t}).then((e=>{b.close(),f.setAvatar(e.avatar),h.disableSubmitButton()})).catch((e=>{console.error(e)})).finally((()=>{b.renderLoading(!1)}))}));b.setEventListeners();const f=new class{constructor(e,t,s){this._profileTitleElement=document.querySelector(e),this._profileDescriptionElement=document.querySelector(t),this._profileAvatarElement=document.querySelector(s)}getUserInfo(){return{title:this._profileTitleElement.textContent,description:this._profileDescriptionElement.textContent}}setUserInfo(e,t){this._profileTitleElement.textContent=e,this._profileDescriptionElement.textContent=t}setAvatar(e){this._profileAvatarElement.src=e}}(".profile__title",".profile__description",".profile__image"),v=new class{constructor(e){this.baseUrl=e.baseUrl,this.headers=e.headers,this._checkResponse=this._checkResponse.bind(this)}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}_request(e,t){return fetch(e,t).then(this._checkResponse)}getUserInfo(){return this._request(`${this.baseUrl}/users/me`,{headers:this.headers})}getInitialCards(){return this._request(`${this.baseUrl}/cards`,{headers:this.headers})}editProfileInfo(e){let{name:t,about:s}=e;return this._request(`${this.baseUrl}/users/me`,{method:"PATCH",headers:this.headers,body:JSON.stringify({name:t,about:s})})}addNewCard(e){let{name:t,link:s}=e;return this._request(`${this.baseUrl}/cards`,{method:"POST",headers:this.headers,body:JSON.stringify({name:t,link:s})})}deleteCard(e){return this._request(`${this.baseUrl}/cards/${e}`,{method:"DELETE",headers:this.headers})}likeCard(e){return this._request(`${this.baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this.headers})}removeLike(e){return this._request(`${this.baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this.headers})}updateAvatar(e){let{avatar:t}=e;return this._request(`${this.baseUrl}/users/me/avatar`,{method:"PATCH",headers:this.headers,body:JSON.stringify({avatar:t})})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"d918969b-47fa-4f72-8138-61be6ab55840","Content-Type":"application/json"}}),S=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._container=document.querySelector(t)}renderItems(e){e.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({renderer:e=>{S.addItem(k(e))}},".cards__list");function k(t){return new e(t,"#card-template",L,y,g,C).getView()}function L(e){let{name:t,link:s}=e;p.open({link:s,name:t})}function y(e){E.open(),E.setSubmitCallback((()=>{v.deleteCard(e.getId()).then((()=>{e.deleteCard(),E.close()})).catch((e=>{console.error(e)}))}))}function g(e){v.likeCard(e._id).then((t=>{e.handleLikeIcon(),e.isLiked=!0,console.log("Card liked:",t)})).catch((e=>{console.error(e)}))}function C(e){v.removeLike(e._id).then((t=>{e.handleLikeIcon(),e.isLiked=!1,console.log("Card disliked:",t)})).catch((e=>{console.log(e)}))}v.getInitialCards().then((e=>{S.renderItems(e.reverse())})).catch((e=>{console.error(e)})),v.getUserInfo().then((e=>{f.setUserInfo(e.name,e.about),f.setAvatar(e.avatar)})).catch((e=>{console.error(e)})),o.addEventListener("click",(()=>{const e=f.getUserInfo();a.value=e.title,d.value=e.description,c.resetValidation(),m.open()})),n.addEventListener("click",(()=>{_.open()})),l.addEventListener("click",(()=>{b.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,